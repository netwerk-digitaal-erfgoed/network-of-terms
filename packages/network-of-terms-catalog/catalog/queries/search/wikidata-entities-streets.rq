PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX mwapi: <https://www.mediawiki.org/ontology#API/>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX vrank: <http://purl.org/voc/vrank#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
    ?item a skos:Concept ;
        skos:prefLabel ?streetName ;
        skos:altLabel ?altLabel ;
        skos:scopeNote ?description ;
        vrank:simpleRank ?score .
}
WHERE {
    {
        SELECT DISTINCT ?item ?score WHERE {
            SERVICE wikibase:mwapi {
                bd:serviceParam wikibase:endpoint "www.wikidata.org" .
                # Instead of using the "EntitySearch" API we use a more generic text search option
                # To avoid noise we will filter the resultset on the occurence of the search string
                # in either prefLabel or altLabel
                bd:serviceParam wikibase:api "Search" .
                bd:serviceParam mwapi:language "nl" .

                bd:serviceParam mwapi:srsearch ?query .
                ?item wikibase:apiOutputItem mwapi:title .
                ?ordinal wikibase:apiOrdinal true.
            }

            BIND(-?ordinal AS ?score)

            # Use UNION instead of VALUES because the latter doesn't properly restrict results.
            {
                # Streets.
                ?item wdt:P31 wd:Q79007
            }
            UNION {
                # Squares.
                ?item wdt:P31 wd:Q174782
            }
            UNION {
                # Main squares, e.g. http://www.wikidata.org/entity/Q1083850.
                ?item wdt:P31 wd:Q26987258
            }
            ?item wdt:P17 wd:Q55 .
        }
        ORDER BY ASC(?ordinal)
        #LIMIT#
    }
    OPTIONAL {
        ?item wdt:P276 ?location .
        ?location rdfs:label ?locationName .
        FILTER LANGMATCHES(LANG(?locationName),"nl")
    }
    OPTIONAL {
        ?item schema:description ?description
        FILTER(LANG(?description) = "nl")
    }
    OPTIONAL {
        ?item skos:altLabel ?altLabel
        FILTER(LANG(?altLabel) = "nl")
    }
    OPTIONAL {
        ?item rdfs:label ?streetName .
        FILTER LANGMATCHES(LANG(?streetName), "nl")
    }
    OPTIONAL {
        ?item wdt:P131/rdfs:label ?administrationName .
        FILTER LANGMATCHES(LANG(?administrationName), "nl")
    }

    # Some streets come with altLabel ‘Street name (Place name)’. For those that don’t, construct the altLabel manually.
    BIND(
        COALESCE(
            ?altLabel,
            IF(
                BOUND(?locationName),
                CONCAT(?streetName," (",?locationName,")"),
                CONCAT(?streetName," (",?administrationName,")")
            )
        ) as ?altLabel
    )
}
